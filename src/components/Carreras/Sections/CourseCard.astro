---
import Calendar from "@src/Images/icons/Calendar.astro";
import Cart from "@src/Images/icons/Cart.astro";
import Circle from "@src/Images/icons/Circle.astro";
import Clock from "@src/Images/icons/Clock.astro";
import Vivo from "@src/Images/icons/Vivo.astro";
import { Image } from "astro:assets";
import { bgImages } from "@src/data/bgImages.ts";
import { techImages } from "@src/data/techImages.ts";

// import ThumbAnsiC from "@src/Images/Carreras/Embebido/ThumbAnsiC.jpg";
// import ThumbARM from "@src/Images/Carreras/Embebido/ThumbARM.jpg";
// import ThumbPicWiFi from "@src/Images/Carreras/Embebido/ThumbPicWifi.jpg";
// import ThumbPicASM from "@src/Images/Carreras/Embebido/ThumbPicASM.jpg";
// import ThumbRedesIndustriales from "@src/Images/Carreras/Embebido/ThumbRedesIndustriales.jpg";
// import ThumbRedCelular from "@src/Images/Carreras/IoT/ThumbRedCelular.jpg";
// import ThumbEsp32C from "@src/Images/Carreras/IoT/ThumbEsp32C.jpg";
// import ThumbLabview from "@src/Images/Carreras/Software/ThumbLabview.jpg";
// import ThumbPython from "@src/Images/Carreras/Software/ThumbPython.jpg";

// import National from "@src/Images/Techs/National.png";
// import Microchip from "@src/Images/Techs/Microchip.png";
// import Arduino from "@src/Images/Techs/Arduino.png";
// import Siemens from "@src/Images/Techs/Siemens.png";
// import Texas from "@src/Images/Techs/Texas.png";
// import Altium from "@src/Images/Techs/Altium.png";
// import Proteus from "@src/Images/Techs/Proteus.png";
// import Multisim from "@src/Images/Techs/Multisim.png";
// import Webench from "@src/Images/Techs/Webench.png";
// import RedExpert from "@src/Images/Techs/RedExpert.png";
// import Quartus from "@src/Images/Techs/Quartus.png";
// import Espressif from "@src/Images/Techs/Espressif.png";
// import Stm32 from "@src/Images/Techs/Stm32.png";
// import C from "@src/Images/Techs/C.png";
// import MpLabX from "@src/Images/Techs/MpLabX.png";
// import Nextion from "@src/Images/Techs/Nextion.png";
// import Figma from "@src/Images/Techs/Figma.png";
// import Asm from "@src/Images/Techs/Asm.png";
// import Modbus from "@src/Images/Techs/Modbus.png";
// import Rs485 from "@src/Images/Techs/Rs485.png";
// import Ethernet from "@src/Images/Techs/Ethernet.png";
// import TcpIp from "@src/Images/Techs/TcpIp.png";
// import Labview from "@src/Images/Techs/Labview.png";
// import Python from "@src/Images/Techs/Python.png";
// import Tkinter from "@src/Images/Techs/Tkinter.png";
// import Esp32 from "@src/Images/Techs/Esp32.png";
// import Raspberry from "@src/Images/Techs/Raspberry.png";
// import Ubidots from "@src/Images/Techs/Ubidots.png";
// import Nodered from "@src/Images/Techs/Nodered.png";
// import Espnow from "@src/Images/Techs/Espnow.png";
// import Wifi from "@src/Images/Techs/Wifi.png";
// import Gsm from "@src/Images/Techs/Gsm.png";
// import Gprs from "@src/Images/Techs/Gprs.png";
// import C3G4G from "@src/Images/Techs/C3G4G.png";
// import GNSS from "@src/Images/Techs/GNSS.png";
// import MQTT from "@src/Images/Techs/MQTT.png";
// import TouchGFX from "@src/Images/Techs/TouchGFX.png";
// import OpenPLC from "@src/Images/Techs/OpenPLC.png";

const { course } = Astro.props;

const {
  bgCourseCard,
  startDate,
  title,
  description,
  techs,
  modality,
  duration,
  hours,
  priceBase,
  priceReal,
} = course.data;

// const bgImages = {
//   "ansi-c": ThumbAnsiC,
//   arm: ThumbARM,
//   "pic-wifi": ThumbPicWiFi,
//   "pic-asm": ThumbPicASM,
//   redes: ThumbRedesIndustriales,
//   redcelular: ThumbRedCelular,
//   esp32c: ThumbEsp32C,
//   labview: ThumbLabview,
//   python: ThumbPython,
// };

// const techImages = {
//   altium: Altium,
//   national: National,
//   microchip: Microchip,
//   arduino: Arduino,
//   siemens: Siemens,
//   texas: Texas,
//   proteus: Proteus,
//   multisim: Multisim,
//   webench: Webench,
//   redexpert: RedExpert,
//   quartus: Quartus,
//   espressif: Espressif,
//   stm32: Stm32,
//   c: C,
//   mplabx: MpLabX,
//   nextion: Nextion,
//   figma: Figma,
//   asm: Asm,
//   modbus: Modbus,
//   rs485: Rs485,
//   ethernet: Ethernet,
//   tcpip: TcpIp,
//   labview: Labview,
//   python: Python,
//   tkinter: Tkinter,
//   esp32: Esp32,
//   raspberry: Raspberry,
//   ubidots: Ubidots,
//   nodered: Nodered,
//   espnow: Espnow,
//   wifi: Wifi,
//   gsm: Gsm,
//   gprs: Gprs,
//   c3g4g: C3G4G,
//   gnss: GNSS,
//   mqtt: MQTT,
//   touchgfx: TouchGFX,
//   openplc: OpenPLC,
// };
---

<div class="lg:odd:bg-white-500">
  <li
    class="mx-auto min-w-72 max-w-7xl snap-center rounded-xl px-7 py-8 shadow-[0px_8px_16px_0px_#18181B30] lg:flex lg:gap-8 lg:rounded-none lg:shadow-none"
  >
    <Image
      src={bgImages[bgCourseCard as keyof typeof bgImages]}
      alt={`Imagen del curso de ${title}`}
      class="mb-4 aspect-video rounded object-contain lg:mb-0"
    />
    <div>
      <header
        class="lg:flex lg:flex-row-reverse lg:items-start lg:justify-between"
      >
        <p class="mb-1 flex gap-1 rounded bg-[#EDE7F3] px-3 py-2">
          <Circle />
          <span class="text-sm text-primary-500">Inicia:</span>
          <span class="text-sm text-black-500">{startDate}</span>
        </p>
        <h2
          class="relative mb-3 text-xl text-black-500 lg:max-w-sm lg:text-2xl"
        >
          {title}
          <span
            class="absolute bottom-0 left-0 h-[2px] w-full bg-primary-400 lg:-left-8"
          >
            <span
              class="absolute -top-1 right-0 h-2 w-2 rounded-full bg-primary-400"
            >
            </span>
          </span>
        </h2>
      </header>
      <p
        class="mb-8 text-pretty font-light leading-5 tracking-wide lg:mb-4 lg:text-black-400"
      >
        {description}
      </p>
      <div class="hidden lg:block">
        <h2 class="relative mb-3 text-black-600 lg:max-w-sm lg:text-lg">
          Tecnologías que usarás en el curso:
          <span
            class="absolute bottom-0 left-0 h-[2px] w-4/5 bg-primary-400 lg:-left-8"
          >
            <span
              class="absolute -top-1 right-0 h-2 w-2 rounded-full bg-primary-400"
            >
            </span>
          </span>
        </h2>
        <ul class="mb-2 flex items-center gap-8">
          {
            techs.map((tech: string) => (
              <Image
                class="aspect-auto h-10"
                src={techImages[tech as keyof typeof techImages]}
                alt={`Logo de ${tech}`}
              />
            ))
          }
        </ul>
      </div>
      <div class="lg:flex lg:flex-row-reverse lg:items-end lg:justify-between">
        <ul class="mb-1 flex items-center justify-center lg:mb-0 lg:items-end">
          <li class="flex flex-col items-center gap-1 px-3 py-2 lg:py-0">
            <Vivo />
            <span class="text-sm font-light text-black-400">{modality}</span>
          </li>
          <li class="flex flex-col items-center gap-1 px-3 py-2 lg:py-0">
            <Calendar />
            <span class="text-sm font-light text-black-400"
              >{duration} semanas</span
            >
          </li>
          <li class="flex flex-col items-center gap-1 px-3 py-2 lg:py-0">
            <Clock fill="#4C545F" width="24" height="24" />
            <span class="text-sm font-light text-black-400">{hours} horas</span>
          </li>
        </ul>
        <footer class="flex items-end justify-between lg:gap-6">
          <span
            class="flex flex-col items-center lg:flex-row-reverse lg:items-end lg:gap-2"
          >
            <span class="text-sm text-black-300 line-through lg:text-base"
              >$ {priceBase} <span class="text-sm">USD</span></span
            >
            <a
              target="_blank"
              href={`https://api.whatsapp.com/send?phone=51970570927&text=Buenas%2C%20vengo%20de%20la%20web%2C%20quisiera%20comprar%20el%20curso%20de: %20*${title}*`}
              class="flex h-fit items-center gap-1 rounded border border-primary-500 bg-primary-500 px-3 py-4 transition-colors duration-300 hover:bg-primary-400 lg:py-2"
            >
              <Cart fill="#FBFCFC" />
              <span class="text-sm text-white-100 lg:text-base"
                >$ {priceReal}
                <span class="text-sm text-[#FFF]">USD</span></span
              >
            </a>
          </span>
          <!-- href={`https://api.whatsapp.com/send?phone=51970570927&text=Buenas%2C%20quisiera%20detalles%20de%20${title}`} -->
          <a
            href={course.id}
            target="_blank"
            class="flex rounded border border-black-300 px-3 py-4 transition-colors duration-300 hover:bg-white-200 lg:py-2"
          >
            <!-- El flex es para igualar las alturas de ambos botones, algo que no entiendo la razón, pero funciona -->
            <span class="text-sm text-black-300">Más detalles</span>
          </a>
        </footer>
      </div>
    </div>
  </li>
</div>
