---
import ServiceCardImage from "@src/Images/Servicios/ServiceCard.jpg";
import FabricacionPCB from "@src/Images/Servicios/Hardware/FabricacionPCB.jpg";
import DesarrolloProducto from "@src/Images/Servicios/Hardware/DesarrolloProducto.jpg";
import Diseño3D from "@src/Images/Servicios/Hardware/Diseño3D.jpg";
import DiseñoPCB from "@src/Images/Servicios/Hardware/DiseñoPCB.jpg";
import EnsamblajePCB from "@src/Images/Servicios/Hardware/EnsamblajePCB.jpg";
import IngenieriaInversa from "@src/Images/Servicios/Hardware/IngenieriaInversa.jpg";
import DesarolloApps from "@src/Images/Servicios/Software/DesarrolloApps.jpg";
import DesarrolloEscritorio from "@src/Images/Servicios/Software/DesarrolloEscritorio.jpg";
import DesarrolloFirmware from "@src/Images/Servicios/Software/DesarrolloFirmware.jpg";
import DesarrolloIoT from "@src/Images/Servicios/Software/DesarrolloIoT.jpg";
import DesarrolloRTOS from "@src/Images/Servicios/Software/DesarrolloRTOS.jpg";
import DesarrolloSoftwareIndustrial from "@src/Images/Servicios/Software/DesarrolloSoftwareIndustrial.jpg";

import { Image } from "astro:assets";

const {
  title,
  ImageSrc,
  description,
  link = "https://wa.link/fc3qb5",
} = Astro.props;

const servicesImages = {
  FabricacionPCB: FabricacionPCB,
  DesarrolloProducto: DesarrolloProducto,
  Diseño3D: Diseño3D,
  DiseñoPCB: DiseñoPCB,
  EnsamblajePCB: EnsamblajePCB,
  IngenieriaInversa: IngenieriaInversa,
  DesarolloApps: DesarolloApps,
  DesarrolloEscritorio: DesarrolloEscritorio,
  DesarrolloFirmware: DesarrolloFirmware,
  DesarrolloIoT: DesarrolloIoT,
  DesarrolloRTOS: DesarrolloRTOS,
  DesarrolloSoftwareIndustrial: DesarrolloSoftwareIndustrial,
};
---

<li
  class="h-80 min-w-fit snap-center flex-col justify-center overflow-y-auto rounded bg-white-100 outline outline-1 outline-white-600"
>
  <Image
    src={servicesImages[ImageSrc as keyof typeof servicesImages]}
    alt={`Imagen de servicio ${title}`}
    class:list={"h-[161px] w-[280px] rounded-t object-cover"}
  />
  <div class="relative">
    <hgroup
      class="absolute -top-7 left-0 right-0 mx-auto max-w-60 rounded bg-white-50 px-3 pb-3 pt-2 shadow-sm"
    >
      <h3 class="mb-3 text-center leading-tight text-black-500">
        {title}
      </h3>
      <p
        class="text-center text-sm font-light leading-tight tracking-wide text-black-400"
      >
        {description}
      </p>
    </hgroup>
    <footer
      class="absolute -bottom-36 left-0 right-0 mx-auto flex items-end justify-center gap-4"
    >
      <span
        class="flex flex-col items-center lg:flex-row-reverse lg:items-end lg:gap-2"
      >
        <a
          href={link}
          target="_blank"
          class="flex h-fit items-center gap-1 rounded border border-primary-500 bg-primary-500 px-3 py-1 transition-colors duration-300 hover:bg-primary-400 lg:py-2"
        >
          <span class="text-sm text-white-100 lg:text-base"
            >Solicitar Servicio
          </span>
        </a>
      </span>
      <a
        href={link}
        class="flex rounded border border-black-300 px-3 py-1 transition-colors duration-300 hover:bg-white-200 lg:py-2"
      >
        <!-- El flex es para igualar las alturas de ambos botones, algo que no entiendo la razón, pero funciona -->
        <span class="text-sm text-black-300">Más detalles</span>
      </a>
    </footer>
  </div>
</li>
